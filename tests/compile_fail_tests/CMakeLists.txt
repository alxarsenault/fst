
# Compile fail tests
set(FST_COMPILE_FAIL_TESTS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}")
file(GLOB FST_COMPILE_FAIL_TESTS RELATIVE ${FST_COMPILE_FAIL_TESTS_DIRECTORY} ${FST_COMPILE_FAIL_TESTS_DIRECTORY}/*)

foreach(CURRENT_COMPILE_FAIL_TEST_NAME ${FST_COMPILE_FAIL_TESTS})

    if (IS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/${CURRENT_COMPILE_FAIL_TEST_NAME}")
        set(CURRENT_COMPILE_FAIL_TEST_DIRECTORY ${FST_COMPILE_FAIL_TESTS_DIRECTORY}/${COMPILE_FAIL_TEST_NAME})
        file(GLOB_RECURSE CURRENT_COMPILE_FAIL_TEST_SOURCE "${CURRENT_COMPILE_FAIL_TEST_DIRECTORY}/*.h" "${CURRENT_COMPILE_FAIL_TEST_DIRECTORY}/*.cpp")

        add_executable(${CURRENT_COMPILE_FAIL_TEST_NAME} ${CURRENT_COMPILE_FAIL_TEST_SOURCE})
        target_link_libraries(${CURRENT_COMPILE_FAIL_TEST_NAME} PUBLIC fst)
        target_include_directories(${CURRENT_COMPILE_FAIL_TEST_NAME} PRIVATE "${CURRENT_COMPILE_FAIL_TEST_DIRECTORY}")
        fst_set_compile_options(${CURRENT_COMPILE_FAIL_TEST_NAME} PUBLIC)
        fst_include_config(${CURRENT_COMPILE_FAIL_TEST_NAME})

        set_target_properties(${CURRENT_COMPILE_FAIL_TEST_NAME} PROPERTIES
            EXCLUDE_FROM_ALL TRUE
            EXCLUDE_FROM_DEFAULT_BUILD TRUE
            FOLDER tests/compile_fail_tests
        )

        add_test(
            NAME ${CURRENT_COMPILE_FAIL_TEST_NAME} 
            COMMAND ${CMAKE_COMMAND} --build . --target ${CURRENT_COMPILE_FAIL_TEST_NAME} --config $<CONFIG>
        )

        set_tests_properties(${CURRENT_COMPILE_FAIL_TEST_NAME} PROPERTIES WILL_FAIL TRUE)
    endif()
    
endforeach()
